import utils


operation carryBall(frame: Frame, targetPosition: Point, distanceThreshold: real) {
	requires GetDistanceBetweenTwoPointsI
	requires AllyHasBallI
	requires NodeStatusI	
	
	var robot: Robot = frame.robot
	var ball: Ball = frame.ball
	var ballPosition: Point = ball.pos
	var distance: nat
	
	// States.
	initial Initial
	state GetDistanceBetweenBallAndTarget {
		entry GetDistanceBetweenTwoPoints(ballPosition, targetPosition); AllyHasBall(robot, ball)
		exit distance = getDistanceBetweenTwoPointsResult
	}
	final Stop
	
	// Transitions.
	transition start {
		from Initial
		to GetDistanceBetweenBallAndTarget
	}
	
	transition success {		
		from GetDistanceBetweenBallAndTarget
		to Stop
		condition getDistanceBetweenTwoPointsResult < distanceThreshold
		action nodeStatus = NODE_STATUS::DONE
	}
	
	transition fail {		
		from GetDistanceBetweenBallAndTarget
		to Stop
		condition not allyHasBallResult
		action nodeStatus = NODE_STATUS::FAILED
	}
}
