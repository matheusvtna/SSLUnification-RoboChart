import utils

operation goToBehindBall(targetPosition: Point, angleThreshold: real) {
	
	requires NodeStatusI
	
	// Robot instance.
	var robot: Robot	
	var ball: Ball
	
	// States.
	initial Initial
	state GoToBehindBall {}	
	final Stop
	
	// Transitions.
	transition goToBehindBall {
		from Initial
		to GoToBehindBall
	}
	
	transition success {		
		from GoToBehindBall
		to Stop
		condition (allyIsBehind(robot, getPositionFromBall(ball), targetPosition, angleThreshold) /\ allyIsCloseToBall(robot, ball)) 
		action nodeStatus = NODE_STATUS::DONE
	}
	
	transition fail {		
		from GoToBehindBall
		to Stop
		condition allyIsPushingBallWithHisBack(robot, ball)
		action nodeStatus = NODE_STATUS::FAILED
	}
}	

