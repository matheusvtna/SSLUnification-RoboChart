import utils
import robot

operation goToBehindBall(targetPosition: Point, angleThreshold: real) {
	requires AllyIsBehindI
	requires AllyIsCloseToBallI
	requires NodeStatusI
	
	// Robot instance.
	var robot: Robot	
	var ball: Ball
	
	// States.
	initial Initial
	state GoToBehindBall {
		entry AllyIsBehind(robot, ball.pos, targetPosition, angleThreshold); 
			AllyIsCloseToBall(robot, ball)
	}	
	final Stop
	
	// Transitions.
	transition goToBehindBall {
		from Initial
		to GoToBehindBall
	}
	
	transition success {		
		from GoToBehindBall
		to Stop
		condition (allyIsBehindResult /\ allyIsCloseToBallResult) 
		action nodeStatus = NODE_STATUS::DONE
	}
	
	transition fail {		
		from GoToBehindBall
		to Stop
		condition allyIsPushingBallWithHisBack(robot, ball)
		action nodeStatus = NODE_STATUS::FAILED
	}
}	

