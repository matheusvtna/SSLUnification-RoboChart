import utils
import robot

operation approachBall(ball: Ball, angleThreshold: real) {
	requires NodeStatusI
	requires AllyIsBehindI
	requires AllyIsCloseToBallI
	requires AllyHasBallI
	
	// Robot instance.
	var robot: Robot
	
	var target: Point
	
	// States.
	initial Initial
	state Approach {
		entry AllyIsBehind(robot, ball.pos, target, angleThreshold); AllyIsCloseToBall(robot, ball); AllyHasBall(robot, ball)
	}	
	final Stop
	
	// Transitions.
	transition start {
		from Initial
		to Approach
	}
	
	transition success {		
		from Approach
		to Stop
		condition allyHasBallResult
		action nodeStatus = NODE_STATUS::DONE
	}
	
	transition fail {
		from Approach
		to Stop
		condition (not allyIsBehindResult \/ not allyIsCloseToBallResult)
		action nodeStatus = NODE_STATUS::FAILED
	}
}	

