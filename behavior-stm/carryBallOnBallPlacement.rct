import utils

interface NodeStatusI {
	var isComplete : boolean
}

interface carryBallI{
	carryBall(frame: Frame, targetPosition: Position, distanceThreshold: real)
}

operation carryBallOnBallPlacement(frame: Frame, targetPosition: Position) {
	requires carryBallI
	requires NodeStatusI
	
	// Robot instance.
	var robot: Robot
	var ball: Ball = getBall(frame)
	
	// Constants.
	const DIST_THRESHOLD_BALL_TO_TARGET: real = 150
	const DIST_THREHOLD_ROBOT_TO_TARGET_ON_FINISH: real = 500
	const MIN_ANGLE_DIFF_TO_CONSIDER_ALIGNED_WITH_BALL_IN_DEGREES: real = 60
		
	// States.
	initial Initial
	state GoToBehindBall {
		entry isComplete = false; goToBehindBall(targetPosition, MIN_ANGLE_DIFF_TO_CONSIDER_ALIGNED_WITH_BALL_IN_DEGREES)
	}
	state ApproachBall {
		entry isComplete = false; approachBall(ball)
	}
	state PlaceBall {
		// TODO: Change carryBall to PlaceBall, which defines whether the robot should carry or pass the ball to place it.
		entry isComplete = false; carryBall(frame, targetPosition, DIST_THRESHOLD_BALL_TO_TARGET)
	}
	state MoveAwayFromBall {
		entry isComplete = false; moveAwayFromPosition(frame, targetPosition, DIST_THREHOLD_ROBOT_TO_TARGET_ON_FINISH)
	}
	final Final
	
	// Transitions.
	
	// As transicoes desta maquina (operacao) sao as mesmas condicoes das sub-maquinas.
	// Como fazer esse fluxo sem que haja duplicacao de condicionais?
	// Se for repetir, pode haver condicoes escritas diferentes, onde nao deveriam existir.
	// Existe alguma forma de transicionar quando uma operacao acabar?
	transition AdjustToCarryBall {
		from Initial
		to GoToBehindBall
	}
	
	transition GetBallControl {		
		from GoToBehindBall
		to ApproachBall
		//condition (allyIsBehind(robot, targetPosition, MIN_ANGLE_DIFF_TO_CONSIDER_ALIGNED_WITH_BALL_IN_DEGREES) /\ allyIsCloseToBall(robot, ball))
		condition isComplete == true
	}
	
	transition PlaceBallInPosition {
		from ApproachBall
		to PlaceBall
		//condition allyHasBall(robot, ball)
		condition isComplete == true
	}
	
	transition MoveAway {
		from PlaceBall	
		to MoveAwayFromBall
		//condition getDistance(getBallPosition(frame), targetPosition) < DIST_THRESHOLD_BALL_TO_TARGET
		condition isComplete == true
	}
	
	transition Finish {
		from MoveAwayFromBall
		to Final
		//condition getDistance(getRobotPosition(frame), targetPosition) < DIST_THREHOLD_ROBOT_TO_TARGET_ON_FINISH
		condition isComplete == true
	}
}	

