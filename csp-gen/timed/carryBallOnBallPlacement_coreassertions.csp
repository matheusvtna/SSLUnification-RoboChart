
--
-- RoboChart generator version 3.0.0.202206212138
-- Automatically generated on 24-09-2023 21:46:59
--
-- Iterated compression status: true
-- Assertions compression status: false
--

include "carryBallOnBallPlacement.csp"

-- generate carryBallOnBallPlacement_CarryBallOnBallPlacementSTM
P_carryBallOnBallPlacement_CarryBallOnBallPlacementSTM = let
	id__ = 0
	
	
	
within
	carryBallOnBallPlacement::CarryBallOnBallPlacementSTM::O__(
		id__
	)
assert P_carryBallOnBallPlacement_CarryBallOnBallPlacementSTM :[deadlock-free]	
assert P_carryBallOnBallPlacement_CarryBallOnBallPlacementSTM;RUN({r__}) :[deadlock-free]
assert P_carryBallOnBallPlacement_CarryBallOnBallPlacementSTM :[deterministic]
assert P_carryBallOnBallPlacement_CarryBallOnBallPlacementSTM :[divergence-free]
-- timed deadlock free
assert prioritise(P_carryBallOnBallPlacement_CarryBallOnBallPlacementSTM[[tock<-tock,tock<-tock']],<diff(Events,{tock',tock}),{tock}>)\{tock} :[divergence free [FD]]

-- timelock free
assert RUN({tock}) ||| CHAOS(diff(Events,{|tock|})) [F= P_carryBallOnBallPlacement_CarryBallOnBallPlacementSTM
-- generate carryBallOnBallPlacement_BehaviorSTM
P_carryBallOnBallPlacement_BehaviorSTM = let
	id__ = 0
	
	
	
within
	carryBallOnBallPlacement::BehaviorSTM::O__(
		id__
	)
assert P_carryBallOnBallPlacement_BehaviorSTM :[deadlock-free]	
assert P_carryBallOnBallPlacement_BehaviorSTM;RUN({r__}) :[deadlock-free]
assert P_carryBallOnBallPlacement_BehaviorSTM :[deterministic]
assert P_carryBallOnBallPlacement_BehaviorSTM :[divergence-free]
-- timed deadlock free
assert prioritise(P_carryBallOnBallPlacement_BehaviorSTM[[tock<-tock,tock<-tock']],<diff(Events,{tock',tock}),{tock}>)\{tock} :[divergence free [FD]]

-- timelock free
assert RUN({tock}) ||| CHAOS(diff(Events,{|tock|})) [F= P_carryBallOnBallPlacement_BehaviorSTM


-- generate carryBallOnBallPlacement_BehaviorController
P_carryBallOnBallPlacement_BehaviorController = let
	id__ = 0
	
	
	
		
within
	carryBallOnBallPlacement::BehaviorController::O__(id__)

assert P_carryBallOnBallPlacement_BehaviorController :[deadlock-free]	
assert P_carryBallOnBallPlacement_BehaviorController;RUN({r__}) :[deadlock-free]
assert P_carryBallOnBallPlacement_BehaviorController :[deterministic]
assert P_carryBallOnBallPlacement_BehaviorController :[divergence-free]

-- generate carryBallOnBallPlacement_BehaviorController_stm_ref0
P_carryBallOnBallPlacement_BehaviorController_stm_ref0 = let
	id__ = 0
	
	
	
within
	carryBallOnBallPlacement::BehaviorController::stm_ref0::O__(
		id__
	)
assert P_carryBallOnBallPlacement_BehaviorController_stm_ref0 :[deadlock-free]	
assert P_carryBallOnBallPlacement_BehaviorController_stm_ref0;RUN({r__}) :[deadlock-free]
assert P_carryBallOnBallPlacement_BehaviorController_stm_ref0 :[deterministic]
assert P_carryBallOnBallPlacement_BehaviorController_stm_ref0 :[divergence-free]
-- timed deadlock free
assert prioritise(P_carryBallOnBallPlacement_BehaviorController_stm_ref0[[tock<-tock,tock<-tock']],<diff(Events,{tock',tock}),{tock}>)\{tock} :[divergence free [FD]]

-- timelock free
assert RUN({tock}) ||| CHAOS(diff(Events,{|tock|})) [F= P_carryBallOnBallPlacement_BehaviorController_stm_ref0
-- timed deadlock free
assert prioritise(P_carryBallOnBallPlacement_BehaviorController[[tock<-tock,tock<-tock']],<diff(Events,{tock',tock}),{tock}>)\{tock} :[divergence free [FD]]

-- timelock free
assert RUN({tock}) ||| CHAOS(diff(Events,{|tock|})) [F= P_carryBallOnBallPlacement_BehaviorController

