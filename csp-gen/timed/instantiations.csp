-- generate allyIsLookingToBall
allyIsLookingToBall(robot,ball) = true

-- generate robotHasIR
robotHasIR(robot) = true

-- generate getBall
getBall(frame) = (((0,0)),((0,0)))

-- generate allyHasBall
allyHasBall(robot,ball) = true

-- generate norm
norm(point) = 0

-- generate angleBetween
angleBetween(source,target) = 0

-- generate createVector
createVector(source,target) = ((0,0))

-- generate getTargetPosition
getTargetPosition(frame) = ((0,0))

-- generate allyIsCloseToBall
allyIsCloseToBall(robot,ball) = true

-- generate const_goToPointAndStop_STOP_DIST_THRESHOLD
const_goToPointAndStop_STOP_DIST_THRESHOLD = 0

-- generate Plus
Plus(e1,e2,T) = if member(e1+e2,T) then e1+e2 else e1

-- generate allyCanHaveBallOnDribbler
allyCanHaveBallOnDribbler(robot,ball) = true

-- generate getRobotAngle
getRobotAngle(frame) = 0

-- generate --

-- MODULE CONSTANTS

-- CONTROLLER CONSTANTS

-- STATEMACHINE CONSTANTS

-- OPERATION CONSTANTS

-- BASIC TYPES

-- generate nat
nametype core_nat = union({0..2},{calc_type_min(Union(
			{}))..calc_type_max(Union({}))})

-- generate core_clock_type
nametype core_clock_type = {0..10}

-- BASIC FUNCTIONS

-- generate smallestAngleDiff
smallestAngleDiff(source,target) = 0

-- generate getAngleFromRobot
getAngleFromRobot(robot) = ((0,0))

-- generate allyIsCollidingWithWall
allyIsCollidingWithWall(robot,frame) = true

-- generate real
nametype core_real = union({ -2..2},{calc_type_min(Union(
			{{ -2..2},{ -2..2},{ -2..2}}))..calc_type_max(Union({{ -2..2},{ -2..2},{ -2..2}}))}) 

-- VECTOR TYPES AND OPERATIONS


-- CLOCKS

-- generate getRobot
getRobot(frame) = (0,((0,0)),((0,0)),0,(true,0,0))

-- generate Modulus
Modulus(e1,e2,T) = if member(e1%e2,T) then e1%e2 else e1

-- generate allyIsBehind
allyIsBehind(robot,point,target,angleThreshold) = true

-- generate Minus
Minus(e1,e2,T) = if member(e1-e2,T) then e1-e2 else e1

-- generate unitVector
unitVector(source) = ((0,0))

-- generate string
nametype core_string = LSeq(Char,2)

-- generate dot
dot(source,target) = 0

-- generate getPositionFromRobot
getPositionFromRobot(robot) = ((0,0))

-- generate fromPolar
fromPolar(length,angle) = ((0,0))

-- generate -- OPERATION BOUNDS

-- MODULE CONSTANTS

-- CONTROLLER CONSTANTS

-- STATEMACHINE CONSTANTS

-- generate getPositionFromBall
getPositionFromBall(ball) = ((0,0))

-- generate radiansToDegrees
radiansToDegrees(radians) = 0

-- generate ROBOT_RADIUS
ROBOT_RADIUS() = 0

-- generate getBallPosition
getBallPosition(frame) = ((0,0))

-- generate allyIsBehindBall
allyIsBehindBall(robot,targetPosition) = true

-- generate allyIsPushingBallWithHisBack
allyIsPushingBallWithHisBack(robot,ball) = true

-- generate getTargetAngle
getTargetAngle(frame) = 0

-- generate getDistance
getDistance(source,target) = 0

-- generate getFeedbackFromRobot
getFeedbackFromRobot(robot) = (true,0,0)

-- generate cross
cross(source,target) = 0

-- generate degreesToRadians
degreesToRadians(degrees) = 0

-- generate int
nametype core_int = union({ -2..2},{calc_type_min(Union(
			{}))..calc_type_max(Union({}))})

-- generate getRobotPosition
getRobotPosition(frame) = ((0,0))

-- generate Div
Div(e1,e2,T) = if member(e1/e2,T) then e1/e2 else e1

-- generate Neg
Neg(e1,T) = if member(-e1,T) then -e1 else e1

-- generate boolean
nametype core_boolean = Bool

-- generate Mult
Mult(e1,e2,T) = if member(e1*e2,T) then e1*e2 else e1

-- generate getVelocityFromBall
getVelocityFromBall(ball) = ((0,0))

-- generate getBallVelocity
getBallVelocity(frame) = ((0,0))

-- generate const_carryBallOnBallPlacement_TIME_TO_PLACE_BALL_IN_SECONDS
const_carryBallOnBallPlacement_TIME_TO_PLACE_BALL_IN_SECONDS = 0

-- BASIC TYPES

-- generate createUnitVector
createUnitVector(source,target) = ((0,0))

-- generate const_goToPointAndStop_STOP_ANGLE_THRESHOLD
const_goToPointAndStop_STOP_ANGLE_THRESHOLD = 0

-- OPERATION CONSTANTS

-- BASIC TYPES

