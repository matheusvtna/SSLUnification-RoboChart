
--
-- RoboChart generator version 3.0.0.202206212138
-- Automatically generated on 21-11-2023 22:57:57
--
-- Iterated compression status: true
-- Assertions compression status: false
--

include "file_planningController_defs.csp"
include "core_timed_defs.csp"
include "core_defs.csp"
include "state_timed_defs.csp"
include "robochart_defs.csp"
include "PlanningController.csp"
include "../instantiations.csp"

transparent wbisim
channel r__
-- generate PlanningController
P_PlanningController = let
	id__ = 0
	
	
	
		
within
	PlanningController::O__(id__)

assert P_PlanningController :[deadlock-free]	
assert P_PlanningController;RUN({r__}) :[deadlock-free]
assert P_PlanningController :[deterministic]
assert P_PlanningController :[divergence-free]

-- generate PlanningController_stm_ref0
P_PlanningController_stm_ref0 = let
	id__ = 0
	
	
	
within
	PlanningController::stm_ref0::O__(
		id__
	)
assert P_PlanningController_stm_ref0 :[deadlock-free]	
assert P_PlanningController_stm_ref0;RUN({r__}) :[deadlock-free]
assert P_PlanningController_stm_ref0 :[deterministic]
assert P_PlanningController_stm_ref0 :[divergence-free]
-- timed deadlock free
assert prioritise(P_PlanningController_stm_ref0[[tock<-tock,tock<-tock']],<diff(Events,{tock',tock}),{tock}>)\{tock} :[divergence free [FD]]

-- timelock free
assert RUN({tock}) ||| CHAOS(diff(Events,{|tock|})) [F= P_PlanningController_stm_ref0
-- timed deadlock free
assert prioritise(P_PlanningController[[tock<-tock,tock<-tock']],<diff(Events,{tock',tock}),{tock}>)\{tock} :[divergence free [FD]]

-- timelock free
assert RUN({tock}) ||| CHAOS(diff(Events,{|tock|})) [F= P_PlanningController
